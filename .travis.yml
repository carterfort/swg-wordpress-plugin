# Subscribe with Google, Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

sudo: required

dist: xenial

language: php

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.cache/composer
    - $HOME/.phpbrew
    - $HOME/.npm

branches:
  only:
    - master
    - develop
    - feature/auth-proxy

# Before install, failures in this section will result in build status 'errored'
before_install:
  - |
    if [[ "$PHP" == "1" ]] || [[ "$JS" == "1" ]] || [[ "$E2E" == "1" ]] || [[ "$SNIFF" == "1" ]]; then
      nvm install
      npm ci
    fi
  - |
    if [[ "$PHP" == "1" ]] || [[ "$E2E" == "1" ]] || [[ "$SNIFF" == "1" ]]; then
      docker run --rm -v "$PWD:/app" -v "$HOME/.cache/composer:/tmp/cache" composer install
    fi
  - |
    if [[ "$JS" == "1" ]]; then
      docker run --rm -v "$PWD:/app" -v "$HOME/.cache/composer:/tmp/cache" composer install --no-scripts
    fi
  - |
    if [[ "$WP_VERSION" == "latest" ]]; then
      curl -s http://api.wordpress.org/core/version-check/1.7/ > /tmp/wp-latest.json
      WP_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
      cp /tmp/wordpress/wp-tests-config-sample.php /tmp/wordpress/tests/phpunit/wp-tests-config.php
      export WP_DEVELOP_DIR=/tmp/wordpress
      export WP_TESTS_DIR=/tmp/wordpress/tests/phpunit
      bash tests/bin/install-wp-tests.sh wordpress_test root '' localhost
    fi

script:
  - |
    if [[ "$SNIFF" == "1" ]]; then
      composer lint || exit 1
      npm run lint:js || exit 1
      npm run lint:css || exit 1
    fi
  - |
    if [[ "$JS" == "1" ]]; then
      npm run build || exit 1 # Build for tests.
      npm run test:js || exit 1 # JS unit tests
      npm run test || exit 1 # Bundle size test
      # travis_retry npm run travis:visualtest || exit 1 # Visual regression tests

      # Upload Coverage to CodeCov
      ./node_modules/.bin/codecov -f coverage/js/lcov.info
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      composer test-on-travis
      # Upload Coverage to CodeCov
      ./node_modules/.bin/codecov -f coverage/php/coverage.xml
    fi
  - |
    if [[ "$E2E" == "1" ]]; then
      npm run build || exit 1 # Build for tests.
      npm run env:start || exit 1
      npm run test:e2e:ci || exit 1 # E2E tests.
      npm run env:stop || exit 1
    fi

jobs:
  allow_failures:
    - php: nightly
  include:
    - stage: test
      name: Lint
      php: 7.3
      env: WP_VERSION=4.7 PHPCS_PHP_VERSION='5.4' SNIFF=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - name: PHP Tests (PHP 5.6, WordPress latest)
      php: 5.6
      env: WP_VERSION=latest PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - name: PHP Tests (PHP 7.4, WordPress latest)
      php: 7.4
      env: WP_VERSION=latest PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - name: PHP Tests (PHP 7.4, WordPress Multisite latest)
      php: 7.4
      env: WP_VERSION=latest WP_MULTISITE=1 PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - name: JS Tests
      php: 7.4
      env: WP_VERSION=latest JS=1
    # - name: PHP Tests (PHP nightly, WordPress trunk)
    #   stage: test
    #   php: nightly
    #   env: WP_VERSION=master PHP=1 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    # - stage: test
    #   name: E2E Tests (WordPress latest)
    #   env: E2E=1
    # - stage: test
    #   name: E2E Tests (WordPress 4.7)
    #   env: E2E=1 WP_VERSION=4.7.13
    # - stage: test
    #   name: E2E Tests (WordPress 4.9, Gutenberg 4.9)
    #   env: E2E=1 WP_VERSION=4.9.10 GUTENBERG_VERSION=4.9.0

services:
  - docker
  - mysql
